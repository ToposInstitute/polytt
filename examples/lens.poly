def Lens : (S : Type) → (T : Type) → (A : Type) → (B : Type) → Type :=
  λ S T A B → (S × T) ⇒ (A × B)

def lens
  : (S : Type) → (T : Type) → (A : Type) → (B : Type)
  → (S → A)
  → (S → B → T)
  → Lens S T A B
  :=
  λ S T A B get set →
  λ s⁺ t⁻ ⇝
    (get s⁺) ⇜ (t⁻ ∘ (set s⁺))

def π₁ : (A : Type) → (B : Type) → Lens (A × B) (A × B) A A :=
  λ A B → lens (A × B) (A × B) A A (λ i → fst i) (λ ab a → (a , snd ab))

#normalize π₁ ℕ ℕ (1 , 2)