--------------------[./basic/basics.poly]--------------------

Normal Form: 5
tensor : Π (<27> : Poly), Π (<26> : Poly), Poly
Normal Form: Σ (<28> : ℕ), ℕ
Normal Form: Σ (<29> : ℕ), ℕ
(λ P → Σ (_ : base P), fib P _) : Π (<31> : Poly), Poly
(λ P → λ a⁺ → (a⁺ , λ <2> → <2>)) : Π (P : Poly), Σ (_ : base P), fib P _ ⇒ Σ (_ : base P), fib P _
Normal Form: (42 , λ <3> → succ (succ <3>))
Normal Form: (12 , λ <2> → succ (succ <2>))
Normal Form: (12 , λ <8> → succ (succ (succ (succ <8>))))
Normal Form: λ x <4> → x
Normal Form: λ n⁺ → (n⁺ , λ <1> → succ n⁺)
Normal Form: ((1 , 12) , λ <2> → succ (succ (succ (snd <2>))))
Normal Form: ((2 , 1) , λ <3> → (snd <3> , fst <3>))
Normal Form: λ P Q → Σ (<28> : base P), Σ (_ : base P), fib P _ ⇒ Σ (_ : base Q), fib Q _
Normal Form: refl (λ P Q → Σ (<2> : Σ (p : base P), Π (<59> : fib P p), base Q), Σ (i : fib P (fst <2>)), fib Q (snd <2> i))
Normal Form: λ P Q → Σ (<2> : Σ (p : base P), Π (<59> : fib P p), base Q), Σ (i : fib P (fst <2>)), fib Q (snd <2> i)
Normal Form: λ P Q → Σ (<2> : Σ (p : base P), Π (<64> : fib P p), base Q), Σ (i : fib P (fst <2>)), fib Q (snd <2> i)
Normal Form: λ P Q → λ <3> → ((fst <3> , λ <4> → snd <3>) , λ <3> → (fst <3> , snd <3>))
Normal Form: λ S T A B → #{ .get, .set } → { .get = Π (<72> : S), A, .set = Π (<74> : S), Π (<73> : B), T } _
--------------------[./hole/eval.poly]--------------------

Here is the context!
+ P : Poly
+ Q : Poly
+ _ : Σ (<85> : base P), Σ (_ : base P), fib P _ ⇒ Σ (_ : base Q), fib Q _
+ _ : base Q × (fib Q _ → fib P (fst _))
+ q : fib Q (fst (snd _ (fst _)))
- p⁻ : base P
- y⁻ : fib Q (fst (snd _ (borrow p⁻)))
──────────────

    🭁 ./hole/eval.poly
    │
 10 │     return q⁺ ⇜ λ⁻ q →
 11 │       x⁻ ← f q;
 12 │       -- y⁻ involves (borrow p⁻)
 13 │       ?
    ┷
 [E010] Didn't use all your linear variables in hom.
--------------------[./hole/let.poly]--------------------

Encountered hole with known type!
──────────────
+ ⊢ ?0 : ℕ

--------------------[./hole/morph0.poly]--------------------

Encountered hole at end of hom!
+ P : Poly
+ p⁺ : base P
- p⁻ : fib P p⁺
──────────────
+ ⊢ ?0 : base P
- ⊢ ?1 : fib P ?0

--------------------[./hole/morph1.poly]--------------------

Encountered hole with known type!
+ P : Poly
+ p⁺ : base P
- p⁻ : fib P p⁺
──────────────
+ ⊢ ?0 : base P

Encountered negative hole with known type!
+ P : Poly
+ p⁺ : base P
- p⁻ : fib P p⁺
──────────────
- ⊢ ?1 : fib P ?0

    🭁 ./hole/morph1.poly
    │
  3 │     return ? ⇜ ?
    ┷
 [E010] Didn't use all your linear variables in hom.
--------------------[./hole/morph2.poly]--------------------

Encountered hole with known type!
+ P : Poly
+ p⁺ : base P
- p⁻ : fib P p⁺
──────────────
+ ⊢ ?0 : base P

    🭁 ./hole/morph2.poly
    │
  3 │     return ? ⇜ p⁻
    ┷
 [E006] Could not solve:
          fib P ?0 = fib P p⁺
--------------------[./hole/morph3.poly]--------------------

Encountered hole with known type!
+ P : Poly
+ _ : Σ (<98> : base P), base P
+ p : fib P (fst _)
- p2⁻ : fib P (snd _)
──────────────
+ ⊢ ?0 : fib P (snd _)

--------------------[./hole/pos.poly]--------------------

Encountered hole with known type!
+ A : Type
+ a : A
──────────────
+ ⊢ ?0 : A

--------------------[./let/test-let.poly]--------------------

Normal Form: 9
--------------------[./namespaces/a.poly]--------------------

--------------------[./namespaces/b.poly]--------------------

--------------------[./namespaces/c.poly]--------------------

baz : ℕ
--------------------[./std-lib/Data/Bool.poly]--------------------

--------------------[./std-lib/Data/Either.poly]--------------------

--------------------[./std-lib/Data/Natural.poly]--------------------

--------------------[./std-lib/Data/Polynomial/ADTs.poly]--------------------

--------------------[./std-lib/Data/Polynomial/Fin.poly]--------------------

--------------------[./std-lib/Data/Polynomial/Identity.poly]--------------------

--------------------[./std-lib/Data/Polynomial/Lens.poly]--------------------

--------------------[./std-lib/Data/Polynomial/List.poly]--------------------

--------------------[./std-lib/Data/Polynomial/Machines.poly]--------------------

--------------------[./std-lib/Data/Polynomial/Maybe.poly]--------------------

--------------------[./std-lib/Data/Polynomial/Store.poly]--------------------

--------------------[./std-lib/Data/Polynomial/Vector.poly]--------------------

--------------------[./std-lib/Data/Polynomial/WiringDiagrams.poly]--------------------

--------------------[./std-lib/Data/Polynomial.poly]--------------------

--------------------[./std-lib/Data/Records.poly]--------------------

    🭁 ./std-lib/Data/Records.poly
    │
  3 │ def MyRecordTy := { .foo : ℕ, .bar : Unit, .baz : ℕ → Unit }
    ┷
 [E004] Variable is not bound (or is negative, idk).
--------------------[./std-lib/Data/Unit.poly]--------------------

--------------------[./std-lib/Data/Void.poly]--------------------

--------------------[./std-lib/Prelude.poly]--------------------

--------------------[./std-lib/Tutorial.poly]--------------------

